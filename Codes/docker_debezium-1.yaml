version: '2'
services:
  connect:
    image: debezium/connect:latest
    ports:
     - 8083:8083
    environment:
     - BOOTSTRAP_SERVERS=sqlcdcpoc.servicebus.windows.net:9093
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - ENABLE_APICURIO_CONVERTERS=true 
     - KEY_CONVERTER=io.apicurio.registry.utils.converter.AvroConverter 
     - VALUE_CONVERTER=io.apicurio.registry.utils.converter.AvroConverter 
     - INTERNAL_KEY_CONVERTER=io.apicurio.registry.utils.converter.AvroConverter 
     - INTERNAL_VALUE_CONVERTER=io.apicurio.registry.utils.converter.AvroConverter
     - INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE=true
     - INTERNAL.VALUE.CONVERTER_SCHEMAS_ENABLE=true
     - AUTO_CREATE_TOPICS_ENABLE=true
     - CONNECT_KEY_CONVERTER=io.apicurio.registry.utils.converter.AvroConverter
     - CONNECT_KEY_CONVERTER_APICURIO.REGISTRY_URL=http://host.docker.internal:8080
     - CONNECT_KEY_CONVERTER_APICURIO_REGISTRY_AUTO-REGISTER=true 
     - CONNECT_KEY_CONVERTER_APICURIO_REGISTRY_FIND-LATEST=true 
     - CONNECT_VALUE_CONVERTER=io.apicurio.registry.utils.converter.AvroConverter 
     - CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_URL=http://host.docker.internal:8080
     - CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_AUTO-REGISTER=true 
     - CONNECT_VALUE_CONVERTER_APICURIO_REGISTRY_FIND-LATEST=true 
     - CONNECT_SCHEMA_NAME_ADJUSTMENT_MODE=avro
     - CONNECT_REQUEST_TIMEOUT_MS=60000
     - CONNECT_SECURITY_PROTOCOL=SASL_SSL
     - CONNECT_SASL_MECHANISM=PLAIN
     - CONNECT_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="$$ConnectionString" password="Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=r72OJn+aClhGAmw9P7KZ+s1NtsYC8BNgHnpYYQRYn2M=";
     - CONNECT_PRODUCER_SECURITY_PROTOCOL=SASL_SSL
     - CONNECT_PRODUCER_SASL_MECHANISM=PLAIN
     - CONNECT_PRODUCER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="$$ConnectionString" password="Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=r72OJn+aClhGAmw9P7KZ+s1NtsYC8BNgHnpYYQRYn2M=";
     - CONNECT_CONSUMER_SECURITY_PROTOCOL=SASL_SSL
     - CONNECT_CONSUMER_SASL_MECHANISM=PLAIN
     - CONNECT_CONSUMER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="$$ConnectionString" password="Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=r72OJn+aClhGAmw9P7KZ+s1NtsYC8BNgHnpYYQRYn2M=";


# version: '2'
# services:
#   connect:
#     image: quay.io/debezium/connect:latest
#     ports:
#      - 8083:8083
#     environment:
#       BOOTSTRAP_SERVERS: "sqlcdcpoc.servicebus.windows.net:9093"
#       REST_ADVERTISED_HOST_NAME: localhost
#       REST_PORT: 8083
#       GROUP_ID: connect-cluster
#       CONFIG_STORAGE_TOPIC: configs
#       CONFIG_STORAGE_REPLICATION_FACTOR: 1
#       OFFSET_STORAGE_TOPIC: offsets
#       OFFSET_STORAGE_REPLICATION_FACTOR: 1
#       STATUS_STORAGE_TOPIC: status
#       STATUS_STORAGE_REPLICATION_FACTOR: 1
#       OFFSET_FLUSH_INTERVAL_MS: 10000
#       ADVERTISED_LISTENERS: http://localhost:8084 
#       LISTENERS: http://localhost:8084
#       # KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
#       # KAFKA_ADVERTISED_LISTENERS: INTERNAL://192.168.192.1:9092,EXTERNAL://192.168.43.157:9094
#       LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#       INTER_BROKER_LISTENER_NAME: INTERNAL
#       KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter 
#       VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       #VALUE_CONVERTER_SCHEMAS_ENABLE: false
#       INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       #INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: false
#       #INTERNAL.VALUE.CONVERTER_SCHEMAS_ENABLE: false
#       AUTO_CREATE_TOPICS_ENABLE: 'false'
#       REQUEST_TIMEOUT_MS: 40000
#       SECURITY_PROTOCOL: SASL_SSL
#       SASL_MECHANISM: PLAIN
#       SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username= "$ConnectionString" password= "Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=";
#       PRODUCER_SECURITY_PROTOCOL: SASL_SSL
#       PRODUCER_SASL_MECHANISM: PLAIN
#       PRODUCER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username= "$ConnectionString" password= "Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=";
#       CONSUMER_SECURITY_PROTOCOL: SASL_SSL
#       CONSUMER_SASL_MECHANISM: PLAIN
#       CONSUMER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username= "$ConnectionString" password= "Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=";
#       PLUGIN_PATH: C:\docker_debezium\debezium-connector-sqlserver
# # For testing newer connector versions, unpack the connector archive into this
# # directory and uncomment the lines below
# #    volumes:
# #     - ./debezium-connector-sqlserver:/kafka/connect/debezium-connector-sqlserver
# # version: '3.4'
# # services:
# #   Kafka-debezium-connect-1:
# #     image: confluentinc/cp-server-connect-base:latest
# #     container_name: DBZ-WORKER-1
# #     ports:
# #      - 8083:8083 
# #     environment:
# #       CONNECT_BOOTSTRAP_SERVERS: "sqlcdcpoc.servicebus.windows.net:9093"
# #       CONNECT_REST_HOST_NAME: host.docker.internal
# #       CONNECT_REST_PORT: 8090
# #       CONNECT_REST_ADVERTISED_HOST_NAME: host.docker.internal
# #       CONNECT_METADATA_BROKER_LIST: sqlcdcpoc.servicebus.windows.net:9093
# #       #CONNECT_REST_PORT: 8083
# #       CONNECT_GROUP_ID: connect-cluster
# #       CONNECT_CONFIG_STORAGE_TOPIC: configs
# #       CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
# #       CONNECT_OFFSET_STORAGE_TOPIC: offsets
# #       CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
# #       CONNECT_STATUS_STORAGE_TOPIC: status
# #       CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
# #       CONNECT_OFFSET_FLUSH_INTERVAL_MS: 60000
# #       CONNECT_AUTO_CREATE_TOPICS_ENABLE: 'false'
# #       CONNECT_REQUEST_TIMEOUT_MS: 40000
# #       'sasl.username': "$ConnectionString"
# #       'sasl.password': "Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=;"
# #       #CONNECT_LISTENERS: PLAINTEXT://192.168.192.1:9092,SSL://192.168.192.1:9092
# #       #CONNECT_ADVERTISED_LISTENERS: PLAINTEXT://192.168.192.1:9092,SSL://192.168.192.1:9092
# #       CONNECT_ADVERTISED_LISTENERS: http://localhost:8084 #,http://sqlcdcpoc.servicebus.windows.net:9093
# #       CONNECT_LISTENERS: http://localhost:8084 #http://sqlcdcpoc.servicebus.windows.net:9093
# #       # KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
# #       # KAFKA_ADVERTISED_LISTENERS: INTERNAL://192.168.192.1:9092,EXTERNAL://192.168.43.157:9094
# #       #ADVERTISED_LISTENERS: EXTERNAL://sqlcdcpoc.servicebus.windows.net:9093,INTERNAL://host.docker.internal:9992
# #       CONNECT_INTER_BROKER_LISTENER_NAME: INTERNAL
# #       #LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SSL,INTERNAL:PLAINTEXT
# #       CONNECT_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,EXTERNAL:SSL
# #       #CONNECT_INTER_BROKER_LISTENER_NAME: INTERNAL
# #       CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter 
# #       CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
# #       #CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
# #       CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
# #       CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
# #       #CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS.ENABLE: false
# #       #CONNECT_INTERNAL.VALUE.CONVERTER.SCHEMAS.ENABLE: false
# #       CONNECT_SECURITY_PROTOCOL: SASL_SSL
# #       CONNECT_SASL_MECHANISM: PLAIN
# #       CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username= \"$$ConnectionString\" password= \"Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=\";"
# #       CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
# #       CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
# #       CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username= \"$$ConnectionString\" password= \"Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=\";"
# #       CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
# #       CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
# #       CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username= \"$$ConnectionString\" password= \"Endpoint=sb://sqlcdcpoc.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SFxw1bSlnh2UQId2pIwcrAQ8l2QL6R4jZQ4yrQY5/ZQ=\";"
# #       CONNECT_PLUGIN.PATH: C:\kafka-connet\connector
# #     volumes:
# #      - ./debezium-connector-sqlserver:/kafka/connect/debezium-connector-sqlserver
 
# #     #command:
# #     #  - bash
# #     #  - -c
# #     #  - |
# #     #    echo "Installing connector plugins"
# #     #    confluent-hub install --no-prompt debezium/debezium-connector-sqlserver:latest
# #     #    #
# #     #    echo "Launching Kafka Connect worker"
# #     #    /etc/confluent/docker/run &
# #     #    #
# #     #    sleep infinity
    
    
     
